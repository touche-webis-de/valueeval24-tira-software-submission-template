on: 
  workflow_dispatch:
    inputs:
      notebook:
        description: 'The to-be-submitted jupyter notebook contained in the directory jupyter-notebook-submissions/.'
        required: true
        default: 'pyterrier-notebook.ipynb'


jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        if: inputs.workflowAction == 'test and push'
        with:
          registry: registry.webis.de
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set environment variable for full image tag
        run: |
          echo "IMAGE_TAG=registry.webis.de/code-research/tira/${{ secrets.DOCKERHUB_USERNAME }}/notebook-submission-${{ github.sha }}" >> $GITHUB_ENV
          echo "INPUT_DIRECTORY=${{ github.workspace }}/jupyter-notebook-submissions/example-ir-dataset/" >> $GITHUB_ENV
      -
        name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      -
        name: Install required python packages
        run: |
          python -m pip install --upgrade pip
          pip install tira>=0.0.56
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}/jupyter-notebook-submissions
          load: true
          tags: ${{ env.FULL_IMAGE_TAG }}
      -
        name: Sandbox test
        run: |
          tira-run --input-directory ${{ github.workspace }}/jupyter-notebook-submissions/example-ir-dataset/ --output-directory /tmp/tira-output --image ${{ env.IMAGE_TAG }} --command '/workspace/run-pyterrier-notebook.py --input ${TIRA_INPUT_DIRECTORY} --output ${TIRA_OUTPUT_DIRECTORY} --notebook /workspace/${{ inputs.notebook }}'
      -
        name: Push Docker Image
        
        run: |
          docker push ${{ env.IMAGE_TAG }}
